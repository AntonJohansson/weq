TODO

- Add options for reflectivity :)

- Add offscreen MSAA (learnopengl)

- Track tweakfile callback will never be called since hotloader system hasn't been created yet.
  buffer events?

- calculate normal for grid by sampling in a shader? :)

- Since +z is up, cubemap has to be rotated

- Make WGPU more memory efficient?
  - encode more info in RGB?

- receive-function currently accepts an event by reference
  const reference would be more logical and much safer.
  One should not ve able to alter the data of an event.

- FreeImage is removed,
  - replace with stb_* library

- Use <glm/fwd.hpp> instead of <glm/glm.hpp> in headers :)

- Forward declare headers?

- Currently supports variable dt for wave sim
  - problem with ui variables because if the sim updates at 1k fps,
    the ui has to update at the same frequency, otherwise, the sim will
    overwrite variables and cause unresponsiveness. :///

- Make is so that tweak files pokes variables on load and update :)

- change maximum c or change maximum dt?
  - c < dh/dt <=> dt < dh/c
  - add a way to set engine dt via events
  - if multithread, change system dt
  - could have different dts for single threaded engine :), hmmm
  - display error message if used dt is smaller than the actual one (including safety factor)

- Currently keeping a pointer to the shader program in the shader class, in order to re-link the program
  on hot reload.

- WAVEGPU: be consitent between keeping system vs. component variables, currently settings a
  bunch in main.cpp (component and changing i wavegpu), and later setting stuff i wavegpu.

- operator overloading for VARS.
- namespaces are inconsistent. (eg. Shader doesnt use weq::)
- fix it so that the painted dot handles borders and edges correctly!
  - removed wave effects and colors effects to study this more closely.
- Should I handle texture bounds in get_data and set_data or error?
- Move raycasting code to somewhere else :) (currently in waveGPU...)
- Some weird stuff occurs when creating a texture with byte data and the size is 10*10,
  does not occur for 16*16 or 20*20 +
- FBOS
  - All FBOS are created with a depth component. More customizability please.
- Debug draw
  - Make more efficient (default meshes that you can scale)
- Texture for materials (refractive index)
- Edge shader (radiate properly)
- Wall texture
- Bunch of #undef near, far. Not sure where to place it :/
- Dynamically find resource path using exe location
- Read input from files

